{"version":3,"sources":["services/httpService.js","services/authService.js","components/logout.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviesTable.jsx","components/common/listGroup.jsx","components/common/pagination.jsx","services/movieService.js","services/genreService.js","utils/paginate.js","components/searchBox.jsx","components/movies.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/common/protectedRoute.jsx","App.js","registerServiceWorker.js","index.js"],"names":["axios","defaults","baseURL","process","console","log","interceptors","response","use","error","status","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","apiEndpoint","tokenKey","email","password","a","http","data","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","Logout","auth","window","location","Component","TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","className","this","columns","map","onClick","label","key","TableBody","renderCell","item","content","_","createKey","_id","Table","Like","classes","liked","style","cursor","aria-hidden","MoviesTable","movie","to","title","onLike","deleteColumn","onDelete","removeDelete","newColumns","filter","col","user","isAdmin","push","movies","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","movieUrl","id","deleteMovie","movieId","getMovie","saveMovie","body","getGenres","paginate","pageNumber","startIndex","slice","take","value","SearchBox","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Fragment","LoginForm","username","from","pathname","register","RegisterForm","userService","ProtectedRoute","component","render","App","exact","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","REACT_APP_NAME","ReactDOM","document","getElementById","URL","origin","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.33ad7644.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n// import * as auth from './authService'\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\nconsole.log(process.env)\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError = error.response && error.response.status >= 400 && error.response.status < 500\r\n  if (!expectedError) {\r\n    // console.log(\"Error\")\r\n    toast.error(\"An unexpected error occurred\")\r\n  }\r\n  return Promise.reject(error);\r\n})\r\n\r\n// this gets rid of bi-directional dependency between authservice and http service\r\n// http is 'higher' than auth service since auth doesn't work w/o http service\r\nfunction setJwt(jwt){\r\n  axios.defaults.headers.common['x-auth-token'] = jwt;\r\n}\r\n\r\nexport default {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n    setJwt\r\n}","import jwtDecode from 'jwt-decode'\r\nimport http from './httpService'\r\n\r\nconst apiEndpoint = '/auth'\r\nconst tokenKey = \"token\"\r\n\r\nhttp.setJwt(getJwt())\r\n\r\nexport async function login(email, password) {\r\n    const {data: jwt} = await http.post(apiEndpoint, {email, password})\r\n    localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt){\r\n    localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout(){\r\n    localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser(){\r\n    try {\r\n        const jwt = localStorage.getItem(tokenKey);\r\n        return jwtDecode(jwt)\r\n      } catch (error) {\r\n          return null;\r\n      }\r\n}\r\n\r\nexport function getJwt(){\r\n    return localStorage.getItem(\"token\")\r\n}\r\n\r\nexport default{\r\n    login,\r\n    loginWithJwt,\r\n    logout,\r\n    getCurrentUser,\r\n    getJwt\r\n}","import React, { Component } from 'react';\r\nimport auth from '../services/authService'\r\n\r\nclass Logout extends Component {\r\n    componentDidMount(){\r\n        auth.logout()\r\n        window.location = '/'\r\n    }\r\n\r\n    render() { \r\n        return ( null );\r\n    }\r\n}\r\n \r\nexport default Logout;","import React, { Component } from \"react\";\n\n// columns: array\n// sortColumn: object\n// onSort: function\n\nclass TableHeader extends Component {\n  raiseSort = path => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = column => {\n    const { sortColumn } = this.props;\n\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\n    return <i className=\"fa fa-sort-desc\" />;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map(column => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map(item => (\n          <tr key={item._id}>\n            {columns.map(column => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\n\nconst Like = props => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n  return (\n    <i\n      onClick={props.onClick}\n      style={{ cursor: \"pointer\" }}\n      className={classes}\n      aria-hidden=\"true\"\n    />\n  );\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Table from \"./common/table\";\nimport Like from \"./common/like\";\nimport auth from '../services/authService'\n\nclass MoviesTable extends Component {\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n    },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: movie => (\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\n      )\n    }\n  ];\n\n  deleteColumn = {\n    key: \"delete\",\n    content: movie => (\n      <button\n        onClick={() => this.props.onDelete(movie)}\n        className=\"btn btn-danger btn-sm\"\n      >\n        Delete\n      </button>\n    )\n  }\n\n  constructor() {\n    super();\n    const user = auth.getCurrentUser()\n    if(user && user.isAdmin) this.columns.push(this.deleteColumn)\n  }\n\n  removeDelete = (columns) => {\n    let newColumns = columns.filter(col => col.key != 'delete')\n    console.log(newColumns)\n    this.columns = newColumns\n  }\n\n  render() {\n    const { movies, onSort, sortColumn} = this.props;\n\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React from \"react\";\n\nconst ListGroup = ({\n  items,\n  textProperty,\n  valueProperty,\n  selectedItem,\n  onItemSelect\n}) => {\n  return (\n    <ul className=\"list-group\">\n      {items.map(item => (\n        <li\n          onClick={() => onItemSelect(item)}\n          key={item[valueProperty]}\n          className={\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\n          }\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\"\n};\n\nexport default ListGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map(page => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import http from './httpService'\r\n\r\nconst apiEndpoint = '/movies'\r\n\r\nfunction movieUrl(id){\r\n    return `${apiEndpoint}/${id}`\r\n}\r\n\r\nexport function getMovies() {\r\n    return http.get(apiEndpoint)\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n    return http.delete(movieUrl(movieId))\r\n}\r\n\r\nexport function getMovie(movieId){\r\n    return http.get(movieUrl(movieId))\r\n}\r\n\r\nexport function saveMovie(movie){\r\n    console.log(movie)\r\n    if (movie._id) {\r\n        const body = {...movie}\r\n        delete body._id\r\n        return http.put(movieUrl(movie._id), body);\r\n    }\r\n    return http.post(apiEndpoint, movie);\r\n}","import http from './httpService'\r\n\r\nexport function getGenres() {\r\n    return http.get('/genres')\r\n  }\r\n  ","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n}\n","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"query\"\n      className=\"form-control my-3\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={e => onChange(e.currentTarget.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\"\nimport MoviesTable from \"./moviesTable\";\nimport ListGroup from \"./common/listGroup\";\nimport Pagination from \"./common/pagination\";\nimport { getMovies, deleteMovie} from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport { paginate } from \"../utils/paginate\";\nimport _ from \"lodash\";\nimport SearchBox from \"./searchBox\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" }\n  };\n\n  async componentDidMount() {\n    console.log('Movies - Mounted')\n    const {data} = await getGenres()\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n\n    const { data: movies } = await getMovies()\n    this.setState({ movies, genres });\n  }\n\n    // This is where you can do cleanup for things such as timers, data retrieval for a live element, etc.\n  // Otherwise there can be memory leaks\n  componentWillUnmount(){\n    console.log('Movies - Unmount')\n  }\n\n  handleDelete = async movie => {\n    const originalMovies = this.state.movies;\n\n    const movies = originalMovies.filter(m => m._id !== movie._id);\n    this.setState({ movies });\n\n  try{\n   await deleteMovie(movie._id);\n  }\n  catch (err){\n    if (err.response && err.response.status === 404){\n      toast.error(\"this movies has already been deleted\")\n    }\n    this.setState({movies:originalMovies})\n  }\n  };\n\n  handleLike = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n  // I'm not sure why this line is here, spreading the movie into itself. From Mosh. It works without the line\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = genre => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSearch = query => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      searchQuery,\n      movies: allMovies\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery)\n      filtered = allMovies.filter(m =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n    const {user} = this.props\n    const { totalCount, data: movies } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          {user&& \n            <Link\n            to=\"/movies/new\"\n            className=\"btn btn-primary mb-3\"\n          >\n            New Movie\n          </Link>\n          }\n\n          <p>Showing {totalCount} movies in the database.</p>\n          <SearchBox value={searchQuery} onChange={this.handleSearch}/>\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import React from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input {...rest} name={name} id={name} className=\"form-control\" />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select name={name} id={name} {...rest} className=\"form-control\">\n        <option value=\"\" />\n        {options.map(option => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {}\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n\n    this.setState({ data, errors });\n  };\n\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n\n  renderSelect(name, label, options) {\n    const { data, errors } = this.state;\n\n    return (\n      <Select\n        name={name}\n        value={data[name]}\n        label={label}\n        options={options}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = this.state;\n\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getMovie, saveMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\"\n    },\n    genres: [],\n    errors: {}\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string()\n      .required()\n      .label(\"Title\"),\n    genreId: Joi.string()\n      .required()\n      .label(\"Genre\"),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label(\"Daily Rental Rate\")\n  };\n\nasync populateGenres() {\n  const {data:genres} = await getGenres();\n  this.setState({ genres });\n}\n\nasync populateMovie() {\n  try{\n    const movieId = this.props.match.params.id;\n    if (movieId === \"new\") return;\n    console.log(movieId)\n    const {data:movie} = await getMovie(movieId);\n    this.setState({ data: this.mapToViewModel(movie) });\n  }\n  catch(err){\n    if (err.response && err.response.status === 404)\n    this.props.history.replace(\"/not-found\");\n  }\n}\n\n  async componentDidMount() {\n    await this.populateGenres()\n    await this.populateMovie()\n  }\n\n  mapToViewModel(movie) {\n    console.log(movie)\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate\n    };\n  }\n\n  doSubmit = async () => {\n    await saveMovie(this.state.data);\n\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n","import React from \"react\";\n\nconst Customers = () => {\n  return <h1>Customers</h1>;\n};\n\nexport default Customers;\n","import React from \"react\";\n\nconst Rentals = () => {\n  return <h1>Rentals</h1>;\n};\n\nexport default Rentals;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>Not Found</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst NavBar = ({user}) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Vidly\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavAltMarkup\"\n        aria-controls=\"navbarNavAltMarkup\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n          <NavLink className=\"nav-item nav-link\" to=\"/movies\">\n            Movies\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\n            Customers\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\n            Rentals\n          </NavLink>\n          \n          {\n          !user && \n            <React.Fragment>\n              <NavLink className=\"nav-item nav-link\" to=\"/login\">\n                Login\n              </NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/register\">\n                Register\n              </NavLink>\n            </React.Fragment>\n          }\n          {\n          user && \n            <React.Fragment>\n              <NavLink className=\"nav-item nav-link\" to=\"/profile\">\n                {user.name}\n              </NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\n                Logout\n              </NavLink>\n            </React.Fragment>\n          }\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport auth from '../services/authService'\nimport {Redirect} from 'react-router-dom'\n\nclass LoginForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .label(\"Password\")\n  };\n\n  doSubmit = async () => {\n    try {\n      const {data} = this.state\n      await auth.login(data.username, data.password)\n    // causes a full reload of application, so that app component is mounted again and get the JWT \n\n    console.log(this.props.location)\n    const {state} = this.props.location\n    window.location = state ? state.from.pathname : '/'\n\n    } catch (err) {\n      if (err.response && err.response.status === 400){\n        const errors = {...this.state.errors}\n        errors.username = err.response.data\n        this.setState ({errors})\n      }\n    }\n\n  };\n\n  render() {\n    if (auth.getCurrentUser()) return <Redirect to=\"/\"/>\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import http from './httpService'\r\n\r\nconst apiEndpoint = '/users'\r\n\r\nexport function register(user){\r\n    return http.post(apiEndpoint,  {\r\n        email: user.username,\r\n        password: user.password,\r\n        name: user.name\r\n    })\r\n}","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport * as userService from \"../services/userService\"\nimport auth from '../services/authService'\n\nclass RegisterForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\", name: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .email()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .min(5)\n      .label(\"Password\"),\n    name: Joi.string()\n      .required()\n      .label(\"Name\")\n  };\n\n  doSubmit = async () => {\n    // Call the server\n    try{\n      const response = await userService.register(this.state.data)\n      auth.loginWithJwt(response.headers[\"x-auth-token\"])\n      window.location = '/'\n    }\n    catch(err){\n      if (err.response && err.response.status === 400){\n        const errors = {...this.state.errors}\n        errors.username = err.response.data\n        this.setState({errors})\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport auth from'../../services/authService'\r\n\r\nconst ProtectedRoute = ({path, component:Component, render, ...rest}) => {\r\n    return ( \r\n    <Route \r\n        {...rest}\r\n        render={props => { \r\n            console.log(props)\r\n            console.log(!auth.getCurrentUser())\r\n          if (!auth.getCurrentUser()) return (\r\n                <Redirect to={{\r\n                    pathname:'/login',\r\n                    state: {from: props.location}\r\n                }}/>\r\n              )\r\n          return Component ? <Component {...props} /> : render(props)\r\n        }}\r\n\r\n    />\r\n    );\r\n}\r\n \r\nexport default ProtectedRoute","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport {ToastContainer} from 'react-toastify'\nimport Logout from './components/logout';\nimport auth from './services/authService'\nimport Movies from \"./components/movies\";\nimport MovieForm from \"./components/movieForm\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from \"./components/navBar\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport ProtectedRoute from './components/common/protectedRoute';\nimport 'react-toastify/dist/ReactToastify.css'\nimport \"./App.css\";\n\n\nclass App extends Component {\n  state = {}\n\n  componentDidMount(){\n    const user = auth.getCurrentUser()\n    this.setState({user})\n    console.log(user)\n\n  }\n  render() {\n    const {user} = this.state\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user}/>\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute \n              path=\"/movies/:id\" \n              component={MovieForm}\n\n            />\n            <Route \n              path=\"/movies\"  \n              render={props => <Movies {...props} user={user}/>} \n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nconsole.log('SUPERMAN', process.env.REACT_APP_NAME)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}